!function(){"use strict";var e=/^\d+$/g;function r(){setTimeout(function(){window.CustomEvent&&window.dispatchEvent(new CustomEvent("import-map-overrides:change"))})}window.importMapOverrides={addOverride:function(t,o){e.test(o)&&(o=window.importMapOverrides.getUrlFromPort(t,o));var i="import-map-override:"+t;return localStorage.setItem(i,o),r(),window.importMapOverrides.getOverrideMap()},getOverrideMap:function(){for(var e={imports:{}},r=0;r<localStorage.length;r++){var t=localStorage.key(r);t.startsWith("import-map-override:")&&(e.imports[t.slice(20)]=localStorage.getItem(t))}return e},removeOverride:function(e){var t="import-map-override:"+e,o=null!==localStorage.getItem(t);return localStorage.removeItem(t),r(),o},resetOverrides:function(){return Object.keys(window.importMapOverrides.getOverrideMap().imports).forEach(function(e){window.importMapOverrides.removeOverride(e)}),r(),window.importMapOverrides.getOverrideMap()},hasOverrides:function(){return Object.keys(window.importMapOverrides.getOverrideMap().imports).length>0},getUrlFromPort:function(e,r){var t=e.replace(/@/g,"").replace(/\//g,"-");return"//localhost:".concat(r,"/").concat(t,".js")}};var t=window.importMapOverrides.getOverrideMap(),o=document.querySelector('meta[name="importmap-type"]'),i=o?o.getAttribute("content"):"import-map";if(Object.keys(t.imports).length>0){var n=document.createElement("script");n.type=i,n.id="import-map-overrides",n.innerHTML=JSON.stringify(t);var a=document.querySelectorAll('script[type="'.concat(i,'"]'));a.length>0?a[a.length-1].insertAdjacentElement("afterend",n):document.head.appendChild(n)}}();
//# sourceMappingURL=import-map-overrides-api.js.map
