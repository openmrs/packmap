{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"single-spa\"","webpack:///external \"rxjs\"","webpack:///./node_modules/systemjs-webpack-interop/src/public-path-system-resolve.js","webpack:///./src/set-public-path.js","webpack:///./src/rxjs-compat/rxjs-modules.js","webpack:///./src/single-spa-applications/core-applications.js","webpack:///./src/public-path/public-path-helpers.js","webpack:///./src/openmrs-esm-root-config.lib.js","webpack:///./src/openmrs-esm-root-config.defaults.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","systemjsModuleName","rootDirectoryLevel","trim","length","Error","Number","isInteger","moduleUrl","window","System","resolve","err","urlString","url","URL","pathname","numDirsProcessed","index","fullUrl","slice","href","resolveDirectory","setPublicPath","originalResolve","apply","this","arguments","register","_export","coreApplications","shouldShowLogin","localStorage","getItem","location","routeRegex","routePrefix","moduleMap","getModuleUrl","getPublicPath","path","lastIndexOf","prefix","startsWith","getOpenmrsSpaBase","regex","test","replace","registerAllCoreApplications","keys","forEach","coreAppName","import","registerCoreApplicationsExcept","names","Array","isArray","some","registeredApps","appName","includes","push","result","Promise","then","resolved"],"mappings":"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","file":"openmrs-esm-root-config.defaults.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","export function setPublicPath(systemjsModuleName, rootDirectoryLevel = 1) {\n  if (\n    typeof systemjsModuleName !== \"string\" ||\n    systemjsModuleName.trim().length === 0\n  ) {\n    throw Error(\n      \"systemjs-webpack-interop: setPublicPath(systemjsModuleName) must be called with a non-empty string 'systemjsModuleName'\"\n    );\n  }\n\n  if (\n    typeof rootDirectoryLevel !== \"number\" ||\n    rootDirectoryLevel <= 0 ||\n    !Number.isInteger(rootDirectoryLevel)\n  ) {\n    throw Error(\n      \"systemjs-webpack-interop: setPublicPath(systemjsModuleName, rootDirectoryLevel) must be called with a positive integer 'rootDirectoryLevel'\"\n    );\n  }\n\n  let moduleUrl;\n  try {\n    moduleUrl = window.System.resolve(systemjsModuleName);\n    if (!moduleUrl) {\n      throw Error();\n    }\n  } catch (err) {\n    throw Error(\n      \"systemjs-webpack-interop: There is no such module '\" +\n        systemjsModuleName +\n        \"' in the SystemJS registry. Did you misspell the name of your module?\"\n    );\n  }\n\n  __webpack_public_path__ = resolveDirectory(moduleUrl, rootDirectoryLevel);\n}\n\nfunction resolveDirectory(urlString, rootDirectoryLevel) {\n  const url = new URL(urlString);\n  const pathname = new URL(urlString).pathname;\n  let numDirsProcessed = 0,\n    index = pathname.length;\n  while (numDirsProcessed !== rootDirectoryLevel && index >= 0) {\n    const char = pathname[--index];\n    if (char === \"/\") {\n      numDirsProcessed++;\n    }\n  }\n\n  if (numDirsProcessed !== rootDirectoryLevel) {\n    throw Error(\n      \"systemjs-webpack-interop: rootDirectoryLevel (\" +\n        rootDirectoryLevel +\n        \") is greater than the number of directories (\" +\n        numDirsProcessed +\n        \") in the URL path \" +\n        fullUrl\n    );\n  }\n\n  url.pathname = url.pathname.slice(0, index + 1);\n\n  return url.href;\n}\n","import { setPublicPath } from \"systemjs-webpack-interop\";\n\nsetPublicPath(\"@openmrs/esm-root-config\");\n","/* This file exists because rxjs does not publish a bundle\n * to npm that is compatible with import maps. To use rxjs,\n * you must do `import 'rxjs/operators'`. However, import maps interpret\n * the `/` character as a directory and expect there to be an entirely\n * separate file for the rxjs operators. The rxjs lib itself puts the operators\n * into the same umd file as the `rxjs` core stuff, not into a separate file.\n * The code here makes it so that `import 'rxjs/operators'` works without requiring\n * it to be in a separate file.\n */\n\nimport * as rxjs from \"rxjs\";\n\nconst originalResolve = System.resolve;\n\nSystem.resolve = function(name) {\n  if (name === \"rxjs/operators\") {\n    return \"/rxjs-operators.js\";\n  } else {\n    return originalResolve.apply(this, arguments);\n  }\n};\n\nSystem.register(\"/rxjs-operators.js\", [], _export => {\n  _export(rxjs.operators);\n  return {};\n});\n","import { routePrefix, routeRegex } from \"../openmrs-esm-root-config.lib\";\n\nexport const coreApplications = {\n  \"@openmrs/esm-login\": shouldShowLogin,\n  \"@openmrs/esm-devtools\": shouldShowDevtools,\n  \"@openmrs/esm-primary-navigation\": shouldShowPrimaryNavigation,\n  \"@openmrs/esm-patient-dashboard\": shouldShowPatientDashboard,\n  \"@openmrs/esm-home\": shouldShowHome\n};\n\n// To learn more about top level routing in single-spa, go to https://single-spa.js.org/docs/configuration.html#activity-function\n\nfunction shouldShowLogin(location) {\n  return routePrefix(\"login\", location);\n}\n\nfunction shouldShowDevtools() {\n  return localStorage.getItem(\"openmrs:devtools\");\n}\n\nfunction shouldShowPrimaryNavigation(location) {\n  return !shouldShowLogin(location);\n}\n\nfunction shouldShowPatientDashboard(location) {\n  return routeRegex(/^patient\\/.+\\/dashboard/, location);\n}\n\nfunction shouldShowHome(location) {\n  return routePrefix(\"home\", location);\n}\n","// See https://github.com/systemjs/systemjs/issues/1939 for what\n// we are doing here and why.\n\nconst moduleMap = {};\n\nexport function getModuleUrl(name) {\n  const url = moduleMap[name];\n  if (url) {\n    return url;\n  } else {\n    throw Error(\"Cannot find url for module \" + name);\n  }\n}\n\nexport function getPublicPath(name) {\n  const path = moduleMap[name];\n  if (path) {\n    return path.slice(0, path.lastIndexOf(\"/\") + 1);\n  } else {\n    throw Error(\"Cannot find public path for \" + name);\n  }\n}\n\nconst originalResolve = System.resolve;\n\nSystem.resolve = function(name) {\n  const result = originalResolve.apply(this, arguments);\n  if (result instanceof Promise) {\n    return result.then(function(resolved) {\n      moduleMap[name] = resolved;\n      return resolved;\n    });\n  } else {\n    moduleMap[name] = result;\n    return result;\n  }\n};\n","import \"./rxjs-compat/rxjs-modules\";\nimport { registerApplication } from \"single-spa\";\nimport { coreApplications } from \"./single-spa-applications/core-applications\";\n\nexport function routePrefix(prefix, location) {\n  return location.pathname.startsWith(window.getOpenmrsSpaBase() + prefix);\n}\n\nexport function routeRegex(regex, location) {\n  const result = regex.test(\n    location.pathname.replace(window.getOpenmrsSpaBase(), \"\")\n  );\n  return result;\n}\n\nexport function registerAllCoreApplications() {\n  Object.keys(coreApplications).forEach(coreAppName => {\n    registerApplication(\n      coreAppName,\n      () => System.import(coreAppName),\n      coreApplications[coreAppName]\n    );\n  });\n}\n\nexport function registerCoreApplicationsExcept(names) {\n  if (!Array.isArray(names) || names.some(name => typeof name !== \"string\")) {\n    throw Error(\n      `registerCoreApplicationsExcept must be called with an array of string application names`\n    );\n  }\n\n  const registeredApps = [];\n\n  Object.keys(coreApplications).forEach(appName => {\n    if (!names.includes(appName)) {\n      registerApplication(\n        appName,\n        () => System.import(appName),\n        coreApplications[appName]\n      );\n      registeredApps.push(appName);\n    }\n  });\n\n  return registeredApps;\n}\n\nexport { getPublicPath } from \"./public-path/public-path-helpers\";\nexport { getModuleUrl } from \"./public-path/public-path-helpers\";\n","import \"./set-public-path\";\nimport { registerAllCoreApplications } from \"./openmrs-esm-root-config.lib\";\nimport { start } from \"single-spa\";\n\nexport * from \"./openmrs-esm-root-config.lib\";\n\nregisterAllCoreApplications();\nstart();\n"],"sourceRoot":""}